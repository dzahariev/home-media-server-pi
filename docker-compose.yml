version: '3'
services:
  # Main proxy container
  nginx-proxy:
    image: nginxproxy/nginx-proxy:${NGINX_PROXY_VERSION}
    container_name: nginx-proxy
    restart: always
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - 80:80
      - 443:443
    volumes:
      - "${DATA_DIR}/nginx/certs:/etc/nginx/certs"
      - "${DATA_DIR}/nginx/vhosts:/etc/nginx/vhost.d"
      - "${DATA_DIR}/nginx/html:/usr/share/nginx/html"
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.conf:/etc/nginx/proxy.conf

  # Letsencrypt companion container
  acme-companion:
    image: nginxproxy/acme-companion:${ACME_COMPANION_VERSION}
    container_name: acme-companion
    restart: always
    volumes:
      - "${DATA_DIR}/nginx/certs:/etc/nginx/certs"
      - "${DATA_DIR}/nginx/vhosts:/etc/nginx/vhost.d"
      - "${DATA_DIR}/nginx/html:/usr/share/nginx/html"
      - "${DATA_DIR}/nginx/acme:/etc/acme.sh"
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx.conf:/etc/nginx/proxy.conf
    environment: 
      DEFAULT_EMAIL: ${DOMAIN_ADMIN_EMAIL}
    depends_on:
      - nginx-proxy

  # Postgres DB container
  postgresdb:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgresdb
    restart: always
    volumes:
      - "${DATA_DIR}/postgresql:/var/lib/postgresql/data"
    environment: 
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}

  # InfluxDB container
  influxdb:
    image: influxdb:${INFLUXDB_DB_VERSION}
    container_name: influxdb
    restart: always
    environment:
      INFLUXDB_DB: ${INFLUXDB_DB_NAME}
      INFLUXDB_ADMIN_USER: ${INFLUXDB_ADMIN_USER}
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}
      INFLUXDB_USER: ${INFLUXDB_USER}
      INFLUXDB_USER_PASSWORD: ${INFLUXDB_PASSWORD}
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
    volumes:
      - "${DATA_DIR}/influxdb:/var/lib/influxdb2"

  # Root container
  drupal:
    image: drupal:${DRUPAL_VERSION}
    container_name: drupal
    restart: always
    volumes:
      - "${DATA_DIR}/drupal/modules:/var/www/html/modules"
      - "${DATA_DIR}/drupal/profiles:/var/www/html/profiles"
      - "${DATA_DIR}/drupal/themes:/var/www/html/themes"
      - "${DATA_DIR}/drupal/sites:/var/www/html/sites"
    environment:
      VIRTUAL_HOST: ${ROOT_HOST},www.${ROOT_HOST}
      LETSENCRYPT_HOST: ${ROOT_HOST},www.${ROOT_HOST}
    depends_on:
      - acme-companion
      - postgresdb

  # Nextcloud container
  nextcloud:
    image: nextcloud:${NEXTCLOUD_VERSION}
    container_name: nextcloud
    restart: always
    volumes:
      - "${DATA_DIR}/nextcloud:/var/www/html"
    hostname:
      ${NEXTCLOUD_SUBDOMAIN}.${ROOT_HOST}
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER:  ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_HOST: postgresdb
      VIRTUAL_HOST: ${NEXTCLOUD_SUBDOMAIN}.${ROOT_HOST}
      LETSENCRYPT_HOST: ${NEXTCLOUD_SUBDOMAIN}.${ROOT_HOST}
    depends_on:
      - acme-companion
      - postgresdb

  # Grafana container
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: grafana
    user: "1000"
    volumes:
      - "${DATA_DIR}/grafana/storage:/var/lib/grafana"
      - "${DATA_DIR}/grafana/provisioning:/etc/grafana/provisioning"
    links:
      - influxdb:influxdb
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      VIRTUAL_HOST: ${GRAFANA_SUBDOMAIN}.${ROOT_HOST}
      LETSENCRYPT_HOST: ${GRAFANA_SUBDOMAIN}.${ROOT_HOST}
      VIRTUAL_PORT: 3000
    depends_on:
      - influxdb
      - acme-companion

version: '3'
services:
  # Main proxy container
  nginx-proxy:
    image: nginxproxy/nginx-proxy:1.4.0-alpine@sha256:8a3921f5492b76bdfb0732f60e2befad4efe66a2ec61ea89f636d4d1f5d5942d
    container_name: nginx-proxy
    restart: always
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - 80:80
      - 443:443
    volumes:
      - "${DATA_DIR}/nginx/certs:/etc/nginx/certs"
      - "${DATA_DIR}/nginx/vhosts:/etc/nginx/vhost.d"
      - "${DATA_DIR}/nginx/html:/usr/share/nginx/html"
      - "${DATA_DIR}/nginx/htpasswd:/etc/nginx/htpasswd"
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.conf:/etc/nginx/proxy.conf

  # Letsencrypt companion container
  acme-companion:
    image: nginxproxy/acme-companion:2.2.9@sha256:f859e316df787d6e0e3d37edd42d5caf9e3a3cd2dea3e3f665e2cf98d9b3a122
    container_name: acme-companion
    restart: always
    volumes:
      - "${DATA_DIR}/nginx/certs:/etc/nginx/certs"
      - "${DATA_DIR}/nginx/vhosts:/etc/nginx/vhost.d"
      - "${DATA_DIR}/nginx/html:/usr/share/nginx/html"
      - "${DATA_DIR}/nginx/acme:/etc/acme.sh"
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx.conf:/etc/nginx/proxy.conf
    environment: 
      DEFAULT_EMAIL: ${DOMAIN_ADMIN_EMAIL}
    depends_on:
      - nginx-proxy

  # CAdvisor container
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2@sha256:78cf73632de30193dc249923fdfdb1d43ee7cfccbf64662991de89ff7c4b1fda
    container_name: cadvisor
    restart: unless-stopped
    devices:
      - /dev/kmsg
    hostname: cadvisor
    ipc: shareable
    privileged: true
    command:
      - '-housekeeping_interval=20s'
    security_opt:
      - label=disable
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  # Node-Exporter container
  node-exporter:
    image: prom/node-exporter:v1.7.0@sha256:4cb2b9019f1757be8482419002cb7afe028fdba35d47958829e4cfeaf6246d80
    container_name: node-exporter
    restart: unless-stopped
    hostname: node-exporter

  # BlackBox exporter container
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0@sha256:3af31f8bd1ad2907b4b0f7c485fde3de0a8ee0b498d42fc971f0698885c03acb
    container_name: blackbox-exporter
    restart: unless-stopped
    hostname: blackbox-exporter
    command:
      - '--config.file=/config/blackbox.yml'
    volumes:
      - "./blackbox-exporter:/config"

  # Prometheus container
  prometheus:
    image: prom/prometheus:v2.48.1@sha256:a67e5e402ff5410b86ec48b39eab1a3c4df2a7e78a71bf025ec5e32e09090ad4
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    hostname: prometheus
    volumes:
      - "./prometheus:/etc/prometheus"
      - "${DATA_DIR}/prometheus/data:/prometheus"
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
    depends_on:
      - cadvisor
      - node-exporter
      - blackbox-exporter

# Root container
  nginx:
    image: nginx:1.25.3@sha256:10d1f5b58f74683ad34eb29287e07dab1e90f10af243f151bb50aa5dbb4d62ee
    container_name: nginx
    restart: always
    volumes:
      - "./dashboard:/usr/share/nginx/html"
    environment:
      VIRTUAL_HOST: ${ROOT_HOST},www.${ROOT_HOST}
      LETSENCRYPT_HOST: ${ROOT_HOST},www.${ROOT_HOST}
    depends_on:
      - acme-companion

  # Grafana container
  grafana:
    image: grafana/grafana:10.2.2@sha256:e3e9c2b5776fe3657f4954dfa91579224f98a0316f51d431989b15425e95530f
    container_name: grafana
    restart: always
    volumes:
      - "${DATA_DIR}/grafana/storage:/var/lib/grafana"
      - "${DATA_DIR}/grafana/provisioning:/etc/grafana/provisioning"
    links:
      - prometheus:prometheus
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      VIRTUAL_HOST: grafana.${ROOT_HOST}
      LETSENCRYPT_HOST: grafana.${ROOT_HOST}
      VIRTUAL_PORT: 3000
    depends_on:
      - prometheus 
      - acme-companion

  # Transmission container
  transmission:
    image: linuxserver/transmission:4.0.5@sha256:be4d06cca199ffc5ed0b615af0f0f6c203482b4a6b658e8b690cb648457184a1
    container_name: transmission
    restart: always
    volumes:
      - "${DATA_DIR}/transmission/data:/config"
      - "${PLEX_MEDIA_DIR}/downloads:/downloads"
      - "${PLEX_MEDIA_DIR}/watch:/watch"
    hostname:
      transmission.${ROOT_HOST}
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Sofia
      TRANSMISSION_WEB_HOME: /config/combustion-release/
      USER: ${TRANSMISSION_USER}
      PASS: ${TRANSMISSION_PASSWORD}
      VIRTUAL_HOST: transmission.${ROOT_HOST}
      LETSENCRYPT_HOST: transmission.${ROOT_HOST}
      VIRTUAL_PORT: 9091
    depends_on:
      - acme-companion

  # Files Browser container
  files:
    image: filebrowser/filebrowser:v2.26.0@sha256:7428a67e0265f1550e2421bdc554d35889921f5ba2285b829693053fb98aab8a
    container_name: files
    restart: always
    volumes:
      - "${DATA_DIR}/filebrowser/data/filebrowser.db:/database/filebrowser.db"
      - "${PLEX_MEDIA_DIR}:/srv"
    command:
      - '--database'
      - '/database/filebrowser.db'
    hostname:
      files.${ROOT_HOST}
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Sofia
      VIRTUAL_HOST: files.${ROOT_HOST}
      LETSENCRYPT_HOST: files.${ROOT_HOST}
      VIRTUAL_PORT: 80
    depends_on:
      - acme-companion

  # Plex container
  plex:
    image: linuxserver/plex:1.32.8@sha256:8e038b79487919c2aefe976b690067df88113aec21a3d490837584f958c72412
    container_name: plex
    restart: always
    volumes:
      - "${DATA_DIR}/plex:/config"
      - "${PLEX_MEDIA_DIR}:/media"
    hostname:
      plex.${ROOT_HOST}
    ports:
      - 32400:32400
    environment:
      PUID: 1000
      PGID: 1000
      VERSION: docker
      PLEX_CLAIM: ${PLEX_CLAIM_TOKEN}
      VIRTUAL_HOST: plex.${ROOT_HOST}
      LETSENCRYPT_HOST: plex.${ROOT_HOST}
      VIRTUAL_PORT: 32400
    depends_on:
      - acme-companion

  # Calibre container
  calibre:
    image: linuxserver/calibre:7.1.0@sha256:a8917fa81eb863c734f7bbf6e47b6bdcf9ea987a940ba4b75b116322c18155a1
    container_name: calibre
    restart: always
    volumes:
      - "${DATA_DIR}/calibre:/config"
    hostname:
      calibre.${ROOT_HOST}
    ports:
      - 8080:8080
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Sofia
      PASSWORD: ${CALIBRE_ADMIN_PWD}
      VIRTUAL_HOST: calibre.${ROOT_HOST}
      LETSENCRYPT_HOST: calibre.${ROOT_HOST}
      VIRTUAL_PORT: 8081
    depends_on:
      - acme-companion

  # Metube container
  metube:
    image: alexta69/metube:2023-08-19@sha256:2d2fd00ab4641984da3bf9aa4340aa1bfaf349fe4e030f2e7beb9703272cc2a2
    container_name: metube
    restart: always
    hostname:
      metube.${ROOT_HOST}
    volumes:
      - "${PLEX_MEDIA_DIR}/downloads:/downloads"
      - "${DATA_DIR}/metube/cookies:/cookies"
    environment:
      UID: 1000
      GID: 1000
      TZ: Europe/Sofia
      VIRTUAL_HOST: metube.${ROOT_HOST}
      LETSENCRYPT_HOST: metube.${ROOT_HOST}
      VIRTUAL_PORT: 8081
      YTDL_OPTIONS: '{"cookiefile":"/cookies/cookies.txt"}'
    depends_on:
      - acme-companion

  # Postgres DB container
  postgresdb:
    image: postgres:15.5-alpine3.18@sha256:ae51b4f482d5eeea26afccd67c19d05dd091160cbdfc0f60409d069aeca3488d
    container_name: postgresdb
    restart: always
    ports:
      - 5432:5432
    volumes:
      - "${DATA_DIR}/postgresql:/var/lib/postgresql/data"
    environment: 
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}

  # Keycloak container
  keycloak:
    image: keycloak/keycloak:23.0.2@sha256:7812493da2a15799895535234c49ac5cba322e989c899751aa2bd70d945cc6af
    container_name: keycloak
    restart: always
    hostname: keycloak
    links:
      - postgresdb:postgresdb
    command:
    - 'start'
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgresdb/${POSTGRES_DB_NAME}
      KC_DB_USERNAME: ${POSTGRES_DB_USER}
      KC_DB_PASSWORD: ${POSTGRES_DB_PASSWORD}
      KC_DB_SCHEMA: public
      KC_HOSTNAME: auth.${ROOT_HOST}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_PROXY: edge
      PROXY_ADDRESS_FORWARDING: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      LETSENCRYPT_HOST: auth.${ROOT_HOST}
      VIRTUAL_HOST: auth.${ROOT_HOST}
      VIRTUAL_PORT: 8080
    healthcheck:
      test: cat /proc/net/tcp | grep '00000000:1F90 00000000:0000' || exit 1
      interval: 5s
      timeout: 2s
      retries: 20
      start_period: 120s
    depends_on:
      - postgresdb
      - acme-companion

  # InvVal container
  invval:
    image: dzahariev/invval:2.1@sha256:cfca302c334590f8d729ffe843c8fa95d393b5d248f4d4df810b0179b0121eb0
    container_name: invval
    restart: always
    hostname:
      invval.${ROOT_HOST}
    environment:
      PUID: 1000
      PGID: 1000
      CLIENT_ID: ${INVVAL_CLIENT_ID}
      CLIENT_SECRET: ${INVVAL_CLIENT_SECRET} 
      REALM: ${INVVAL_REALM}
      KEYCLOAK_URL: https://auth.${ROOT_HOST} 
      BASE_URL: https://invval.${ROOT_HOST}
      TZ: Europe/Sofia
      VIRTUAL_HOST: invval.${ROOT_HOST}
      LETSENCRYPT_HOST: invval.${ROOT_HOST}
      VIRTUAL_PORT: 8080
    depends_on:
      keycloak:
        condition: service_healthy

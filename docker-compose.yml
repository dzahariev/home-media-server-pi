version: '3'
services:
  # Main proxy container
  nginx-proxy:
    image: nginxproxy/nginx-proxy:1.4.0-alpine@sha256:8a3921f5492b76bdfb0732f60e2befad4efe66a2ec61ea89f636d4d1f5d5942d
    container_name: nginx-proxy
    restart: always
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - 80:80
      - 443:443
    volumes:
      - "${DATA_DIR}/nginx/certs:/etc/nginx/certs"
      - "${DATA_DIR}/nginx/vhosts:/etc/nginx/vhost.d"
      - "${DATA_DIR}/nginx/html:/usr/share/nginx/html"
      - "${DATA_DIR}/nginx/htpasswd:/etc/nginx/htpasswd"
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.conf:/etc/nginx/proxy.conf

  # Letsencrypt companion container
  acme-companion:
    image: nginxproxy/acme-companion:2.2.10@sha256:3f4f7339fa4606aa5ff1f9122bb5f6c8b673c738c60d3721a7526f25671bc873
    container_name: acme-companion
    restart: always
    volumes:
      - "${DATA_DIR}/nginx/certs:/etc/nginx/certs"
      - "${DATA_DIR}/nginx/vhosts:/etc/nginx/vhost.d"
      - "${DATA_DIR}/nginx/html:/usr/share/nginx/html"
      - "${DATA_DIR}/nginx/acme:/etc/acme.sh"
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx.conf:/etc/nginx/proxy.conf
    environment: 
      DEFAULT_EMAIL: ${DOMAIN_ADMIN_EMAIL}
    depends_on:
      - nginx-proxy

  # CAdvisor container
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2@sha256:78cf73632de30193dc249923fdfdb1d43ee7cfccbf64662991de89ff7c4b1fda
    container_name: cadvisor
    restart: unless-stopped
    hostname: 
      cadvisor
    devices:
      - /dev/kmsg
    ipc: shareable
    privileged: true
    command:
      - '-housekeeping_interval=20s'
      - '-docker_only=true'
    security_opt:
      - label=disable
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro

  # Node-Exporter container
  node-exporter:
    image: prom/node-exporter:v1.7.0@sha256:4cb2b9019f1757be8482419002cb7afe028fdba35d47958829e4cfeaf6246d80
    container_name: node-exporter
    restart: unless-stopped
    hostname: 
      node-exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave

  # BlackBox exporter container
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0@sha256:3af31f8bd1ad2907b4b0f7c485fde3de0a8ee0b498d42fc971f0698885c03acb
    container_name: blackbox-exporter
    restart: unless-stopped
    hostname: 
      blackbox-exporter
    command:
      - '--config.file=/config/blackbox.yml'
    volumes:
      - "./blackbox-exporter:/config"

  # Prometheus container
  prometheus:
    image: prom/prometheus:v2.49.1@sha256:beb5e30ffba08d9ae8a7961b9a2145fc8af6296ff2a4f463df7cd722fcbfc789
    container_name: prometheus
    restart: unless-stopped
    hostname: 
      prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    volumes:
      - "./prometheus:/etc/prometheus"
      - "${DATA_DIR}/prometheus/data:/prometheus"
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
    depends_on:
      - cadvisor
      - node-exporter
      - blackbox-exporter

# Root container
  nginx:
    image: nginx:alpine-slim@sha256:73dca61800bd93f538e658db49cd14a6dfa8ccc094228adbf9d97240cdae1d62
    container_name: nginx
    restart: always
    volumes:
      - "./dashboard:/usr/share/nginx/html"
    environment:
      VIRTUAL_HOST: ${ROOT_HOST},www.${ROOT_HOST}
      LETSENCRYPT_HOST: ${ROOT_HOST},www.${ROOT_HOST}
    depends_on:
      - acme-companion

  # Grafana container
  grafana:
    image: grafana/grafana:10.3.1@sha256:7567a7c70a3c1d75aeeedc968d1304174a16651e55a60d1fb132a05e1e63a054
    container_name: grafana
    restart: always
    volumes:
      - "${DATA_DIR}/grafana/storage:/var/lib/grafana"
      - "${DATA_DIR}/grafana/provisioning:/etc/grafana/provisioning"
    links:
      - prometheus:prometheus
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      VIRTUAL_HOST: grafana.${ROOT_HOST}
      LETSENCRYPT_HOST: grafana.${ROOT_HOST}
      VIRTUAL_PORT: 3000
    depends_on:
      - prometheus 
      - acme-companion

  # Transmission container
  transmission:
    image: linuxserver/transmission:4.0.5@sha256:8b340fc8ee6b582e3101aaae0bdaca2fdc336a43f8cc14823988d102e82d2f7c
    container_name: transmission
    restart: always
    hostname:
      transmission.${ROOT_HOST}
    volumes:
      - "${DATA_DIR}/transmission/data:/config"
      - "${PLEX_MEDIA_DIR}/downloads:/downloads"
      - "${PLEX_MEDIA_DIR}/watch:/watch"
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Sofia
      TRANSMISSION_WEB_HOME: /config/combustion-release/
      USER: ${TRANSMISSION_USER}
      PASS: ${TRANSMISSION_PASSWORD}
      VIRTUAL_HOST: transmission.${ROOT_HOST}
      LETSENCRYPT_HOST: transmission.${ROOT_HOST}
      VIRTUAL_PORT: 9091
    depends_on:
      - acme-companion

  # Files Browser container
  files:
    image: filebrowser/filebrowser:v2.27.0@sha256:00b75afd52a92e4525e3bcaf61caa2a31b8d878a5b371380686b1145cb0424fd
    container_name: files
    restart: always
    hostname:
      files.${ROOT_HOST}
    volumes:
      - "${DATA_DIR}/filebrowser/data/filebrowser.db:/database/filebrowser.db"
      - "${PLEX_MEDIA_DIR}:/srv"
    command:
      - '--database'
      - '/database/filebrowser.db'
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Sofia
      VIRTUAL_HOST: files.${ROOT_HOST}
      LETSENCRYPT_HOST: files.${ROOT_HOST}
      VIRTUAL_PORT: 80
    depends_on:
      - acme-companion

  # Plex container
  plex:
    image: linuxserver/plex:1.32.8@sha256:476c057d677ff239d6b0b5c8e7efb2d572a705f69f9860bbe4221d5bbfdf2144
    container_name: plex
    restart: always
    hostname:
      plex.${ROOT_HOST}
    volumes:
      - "${DATA_DIR}/plex:/config"
      - "${PLEX_MEDIA_DIR}:/media"
    ports:
      - 32400:32400
    environment:
      PUID: 1000
      PGID: 1000
      VERSION: docker
      PLEX_CLAIM: ${PLEX_CLAIM_TOKEN}
      VIRTUAL_HOST: plex.${ROOT_HOST}
      LETSENCRYPT_HOST: plex.${ROOT_HOST}
      VIRTUAL_PORT: 32400
    depends_on:
      - acme-companion

  # Calibre container
  calibre:
    image: linuxserver/calibre:7.4.0@sha256:b2ed61e2b25102a15903f29e97a3972a3af6585e20bf149475b68ff8aec1c8bc
    container_name: calibre
    restart: always
    hostname:
      calibre.${ROOT_HOST}
    volumes:
      - "${DATA_DIR}/calibre:/config"
    ports:
      - 8080:8080
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Sofia
      PASSWORD: ${CALIBRE_ADMIN_PWD}
      VIRTUAL_HOST: calibre.${ROOT_HOST}
      LETSENCRYPT_HOST: calibre.${ROOT_HOST}
      VIRTUAL_PORT: 8081
    depends_on:
      - acme-companion

  # Metube container
  metube:
    image: alexta69/metube:2024-01-05@sha256:a9410ec7912dc0fe5b6a2b1b8c5528f573a407bf3a749f41463e9350d0674424
    container_name: metube
    restart: always
    hostname:
      metube.${ROOT_HOST}
    volumes:
      - "${PLEX_MEDIA_DIR}/downloads:/downloads"
      - "${DATA_DIR}/metube/cookies:/cookies"
    environment:
      UID: 1000
      GID: 1000
      TZ: Europe/Sofia
      VIRTUAL_HOST: metube.${ROOT_HOST}
      LETSENCRYPT_HOST: metube.${ROOT_HOST}
      VIRTUAL_PORT: 8081
      YTDL_OPTIONS: '{"cookiefile":"/cookies/cookies.txt"}'
    depends_on:
      - acme-companion

  # FreshRSS container
  freshrss:
    image: linuxserver/freshrss:1.23.1@sha256:2326bb879e1443fdf5addabbcc85dd8a986eb7007a94f3b6ce6279317709b40f
    container_name: freshrss
    restart: always
    hostname:
      freshrss.${ROOT_HOST}
    volumes:
      - "${DATA_DIR}/freshrss:/config"
    environment:
      UID: 1000
      GID: 1000
      TZ: Europe/Sofia
      VIRTUAL_HOST: freshrss.${ROOT_HOST}
      LETSENCRYPT_HOST: freshrss.${ROOT_HOST}
      VIRTUAL_PORT: 80
    depends_on:
      - acme-companion

  # Postgres DB container for Keycloak
  keycloakdb:
    image: postgres:15-alpine@sha256:fd38b581ac045338d356a3c7f0bb6cfd019b358385bc20409f104c33cb788f9b
    container_name: keycloakdb
    restart: always
    expose:
      - "5432" 
    volumes:
      - "${DATA_DIR}/keycloakdb:/var/lib/postgresql/data"
    environment: 
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USER}"]
      interval: 3s
      timeout: 1s
      retries: 10
    depends_on:
      - acme-companion

  # Keycloak container
  keycloak:
    image: keycloak/keycloak:23.0.5@sha256:8772ab5e763f3374b7bb70bce4a96ad384b39c548c40007113538e103ee8a8f2
    container_name: keycloak
    restart: always
    links:
      - keycloakdb:keycloakdb
    command:
      - 'start'
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb/${KEYCLOAK_DB_NAME}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_DB_SCHEMA: public
      KC_HOSTNAME: auth.${ROOT_HOST}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_PROXY: edge
      PROXY_ADDRESS_FORWARDING: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      LETSENCRYPT_HOST: auth.${ROOT_HOST}
      VIRTUAL_HOST: auth.${ROOT_HOST}
      VIRTUAL_PORT: 8080
    healthcheck:
      test: cat /proc/net/tcp | grep '00000000:1F90 00000000:0000' || exit 1
      interval: 5s
      timeout: 2s
      retries: 20
      start_period: 180s
    depends_on:
      keycloakdb:
          condition: service_healthy

  # InvVal container
  invval:
    image: dzahariev/invval:2.1@sha256:cfca302c334590f8d729ffe843c8fa95d393b5d248f4d4df810b0179b0121eb0
    container_name: invval
    restart: always
    hostname:
      invval.${ROOT_HOST}
    environment:
      PUID: 1000
      PGID: 1000
      KEYCLOAK_URL: https://auth.${ROOT_HOST} 
      REALM: ${INVVAL_REALM}
      CLIENT_ID: ${INVVAL_CLIENT_ID}
      CLIENT_SECRET: ${INVVAL_CLIENT_SECRET} 
      BASE_URL: https://invval.${ROOT_HOST}
      TZ: Europe/Sofia
      VIRTUAL_HOST: invval.${ROOT_HOST}
      LETSENCRYPT_HOST: invval.${ROOT_HOST}
      VIRTUAL_PORT: 8080
    depends_on:
      keycloak:
        condition: service_healthy

  # Postgres DB container for Domo
  domodb:
    image: postgres:15-alpine@sha256:fd38b581ac045338d356a3c7f0bb6cfd019b358385bc20409f104c33cb788f9b
    container_name: domodb
    restart: always
    expose:
      - "${DOMO_DB_PORT}" 
    volumes:
      - "${DATA_DIR}/domodb:/var/lib/postgresql/data"
    environment: 
      POSTGRES_DB: ${DOMO_DB_NAME}
      POSTGRES_USER: ${DOMO_DB_USER}
      POSTGRES_PASSWORD: ${DOMO_DB_PASSWORD}
    command: ["-p", "${DOMO_DB_PORT}"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DOMO_DB_USER} -p ${DOMO_DB_PORT}"]
      interval: 3s
      timeout: 1s
      retries: 10
    depends_on:
      keycloak:
        condition: service_healthy

  # DB migrations for Domo
  domo-migrations:
    image: dzahariev/domo-migrations:1.0.4@sha256:8225e8ec7c762f6c1d904d3482f1316107cb3f711cc404296658f1495316f4e2
    container_name: domo-migrations
    restart: on-failure
    environment:
      - POSTGRES_HOST=domodb
      - POSTGRES_PORT=${DOMO_DB_PORT}
      - POSTGRES_DB=${DOMO_DB_NAME}
      - POSTGRES_USER=${DOMO_DB_USER}
      - POSTGRES_PASSWORD=${DOMO_DB_PASSWORD}
      - POSTGRES_SSL=${DOMO_DB_SSL}
    depends_on:
      domodb:
        condition: service_healthy
    command: ["-database", "postgres://${DOMO_DB_USER}:${DOMO_DB_PASSWORD}@domodb:${DOMO_DB_PORT}/${DOMO_DB_NAME}?sslmode=${DOMO_DB_SSL}", "-path", "/db/migrations", "up"]

  # Backend for Domo
  domo-backend:
    image: dzahariev/domo-backend:1.0.4@sha256:acfefd31c65bbdeed53bcefcf4f8dcc1d62d5d4db2081c6c81695dcba49495c4
    container_name: domo-backend
    restart: always
    hostname: 
      domo-backend
    expose:
      - "8801" 
    environment:
      - AUTH_URL=https://auth.${ROOT_HOST}
      - AUTH_REALM=${DOMO_REALM}
      - AUTH_CLIENT_ID=${DOMO_CLIENT_ID}
      - AUTH_CLIENT_SECRET=${DOMO_CLIENT_SECRET}
      - POSTGRES_HOST=domodb
      - POSTGRES_PORT=${DOMO_DB_PORT}
      - POSTGRES_DB=${DOMO_DB_NAME}
      - POSTGRES_USER=${DOMO_DB_USER}
      - POSTGRES_PASSWORD=${DOMO_DB_PASSWORD}
      - POSTGRES_SSL=${DOMO_DB_SSL}
      - API_PORT=8801
      - API_PATH=/
    depends_on:
      - domodb
      - domo-migrations
    command: ["/app/main"]

  # Frontend for Domo
  domo-frontend:
    image: dzahariev/domo-frontend:1.0.4@sha256:5c14046fc8ccdc8d8d97e394c159ad76b3896a7011a364a0c7333344cecac18f
    container_name: domo-frontend
    restart: always
    hostname: 
      domo-frontend
    expose:
      - "8802" 
    volumes:
      - ./domo/keycloak/keycloak.json:/usr/share/nginx/html/libs/keycloak-cfg/keycloak.json:ro
    depends_on:
      - domo-backend

  # Gateway for Domo
  domo-gateway:
    image: nginx:alpine-slim@sha256:73dca61800bd93f538e658db49cd14a6dfa8ccc094228adbf9d97240cdae1d62
    container_name: domo-gateway
    hostname: 
      domo.${ROOT_HOST}
    restart: always
    volumes:
      - ./domo/gateway/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      VIRTUAL_HOST: domo.${ROOT_HOST}
      LETSENCRYPT_HOST: domo.${ROOT_HOST}
      VIRTUAL_PORT: 8800
    depends_on: 
      - domo-backend
      - domo-frontend

version: '3'
services:
  # Main proxy container
  nginx-proxy:
    image: nginxproxy/nginx-proxy:0.10-alpine
    container_name: nginx-proxy
    restart: always
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - 80:80
      - 443:443
    volumes:
      - "${DATA_DIR}/nginx/certs:/etc/nginx/certs"
      - "${DATA_DIR}/nginx/vhosts:/etc/nginx/vhost.d"
      - "${DATA_DIR}/nginx/html:/usr/share/nginx/html"
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.conf:/etc/nginx/proxy.conf

  # Letsencrypt companion container
  acme-companion:
    image: nginxproxy/acme-companion:2.1.3
    container_name: acme-companion
    restart: always
    volumes:
      - "${DATA_DIR}/nginx/certs:/etc/nginx/certs"
      - "${DATA_DIR}/nginx/vhosts:/etc/nginx/vhost.d"
      - "${DATA_DIR}/nginx/html:/usr/share/nginx/html"
      - "${DATA_DIR}/nginx/acme:/etc/acme.sh"
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx.conf:/etc/nginx/proxy.conf
    environment: 
      DEFAULT_EMAIL: ${DOMAIN_ADMIN_EMAIL}
    depends_on:
      - nginx-proxy

  # CAdvisor container
  cadvisor:
    image: zcube/cadvisor:v0.39.3
    container_name: cadvisor
    restart: unless-stopped
    devices:
      - /dev/kmsg
    hostname: cadvisor
    ipc: shareable
    privileged: true
    security_opt:
      - label=disable
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  # Node-Exporter container
  node-exporter:
    image: prom/node-exporter:v1.3.1
    container_name: node-exporter
    restart: unless-stopped
    hostname: node-exporter

  # Prometheus container
  prometheus:
    image: prom/prometheus:v2.33.4
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    hostname: prometheus
    volumes:
      - "./prometheus:/etc/prometheus"
      - "${DATA_DIR}/prometheus/data:/prometheus"
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
    depends_on:
      - cadvisor
      - node-exporter

  # Maria DB container
  mariadb:
    image: mariadb:10.8.2
    container_name: mariadb
    restart: always
    volumes:
      - "${DATA_DIR}/mariadb:/var/lib/mysql"
    environment: 
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}

  # PHPMyAdmin container
  myadmin:
    image: phpmyadmin:5.1.3
    container_name: myadmin
    restart: always
    volumes:
      - "${DATA_DIR}/postgresql:/var/lib/postgresql/data"
    links:
      - mariadb:mariadb
    environment: 
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      VIRTUAL_HOST: myadmin.${ROOT_HOST}
      LETSENCRYPT_HOST: myadmin.${ROOT_HOST}
    depends_on:
      - mariadb

# Root container
  nginx:
    image: nginx:1.21.6
    container_name: nginx
    restart: always
    volumes:
      - "./dashboard:/usr/share/nginx/html"
    environment:
      VIRTUAL_HOST: ${ROOT_HOST},www.${ROOT_HOST}
      LETSENCRYPT_HOST: ${ROOT_HOST},www.${ROOT_HOST}
    depends_on:
      - acme-companion

  # Bloog container
  wordpress:
    image: wordpress:5.9.1
    container_name: wordpress
    restart: always
    volumes:
      - "${DATA_DIR}/wordpress:/var/www/html/"
    environment:
      WORDPRESS_DB_HOST: mariadb
      WORDPRESS_DB_USER: ${MARIADB_USER}
      WORDPRESS_DB_PASSWORD: ${MARIADB_PASSWORD}
      WORDPRESS_DB_NAME: ${MARIADB_DATABASE}
      WORDPRESS_TABLE_PREFIX: "wp_"
      VIRTUAL_HOST: blog.${ROOT_HOST}
      LETSENCRYPT_HOST: blog.${ROOT_HOST}
    depends_on:
      - acme-companion
      - mariadb

  # Grafana container
  grafana:
    image: grafana/grafana:8.4.3
    container_name: grafana
    restart: always
    volumes:
      - "${DATA_DIR}/grafana/storage:/var/lib/grafana"
      - "${DATA_DIR}/grafana/provisioning:/etc/grafana/provisioning"
    links:
      - prometheus:prometheus
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      VIRTUAL_HOST: grafana.${ROOT_HOST}
      LETSENCRYPT_HOST: grafana.${ROOT_HOST}
      VIRTUAL_PORT: 3000
    depends_on:
      - prometheus 
      - acme-companion

  # Plex container
  plex:
    image: linuxserver/plex:1.25.6
    container_name: plex
    restart: always
    volumes:
      - "${DATA_DIR}/plex:/config"
      - "${PLEX_MEDIA_DIR}:/media"
    hostname:
      plex.${ROOT_HOST}
    environment:
      PUID: 1000
      PGID: 1000
      VERSION: docker
      PLEX_CLAIM: ${PLEX_CLAIM_TOKEN}
      VIRTUAL_HOST: plex.${ROOT_HOST}
      LETSENCRYPT_HOST: plex.${ROOT_HOST}
      VIRTUAL_PORT: 32400
    depends_on:
      - acme-companion

